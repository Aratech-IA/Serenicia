# Generated by Django 3.2.13 on 2023-04-02 16:01

import app4_ehpad_base.validators
import app9_personnalized_project.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app15_calendar', '__first__'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('app4_ehpad_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('support_project', 'Support project'), ('demo', 'Demonstration')], max_length=20)),
                ('day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='Weekday')),
                ('start', models.TimeField(verbose_name='Start time')),
                ('end', models.TimeField(verbose_name='End time')),
            ],
            options={
                'verbose_name': 'Appointment slot',
                'verbose_name_plural': 'Appointment slots',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Order')),
                ('title', models.CharField(max_length=200)),
                ('can_comment', models.BooleanField(default=True, verbose_name='Can add comment')),
                ('comment_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Comment title')),
                ('select_meal_type', models.BooleanField(blank=True, choices=[(None, 'No'), (True, 'Yes')], default=None, help_text='Allows you to select the type of meal in this chapter', null=True, unique=True, verbose_name='Meal presentation')),
            ],
            options={
                'verbose_name': 'Chapter',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Notation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.chapter')),
            ],
        ),
        migrations.CreateModel(
            name='NotationChoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], verbose_name='Value')),
                ('text', models.CharField(max_length=50, verbose_name='Text')),
            ],
            options={
                'verbose_name': 'Notation',
                'ordering': ['value'],
                'unique_together': {('value', 'text')},
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, upload_to='app9_personnalized_project/genosociagram/')),
                ('level_y', models.SmallIntegerField(default=0, null=True)),
                ('level_x', models.SmallIntegerField(default=0, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last name')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First name')),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, 'Male'), (1, 'Feminine')], verbose_name='Gender')),
                ('birth', models.DateField(blank=True, null=True)),
                ('death', models.DateField(blank=True, null=True)),
                ('deceased', models.BooleanField(default=False, verbose_name='Deceased')),
                ('comment', models.TextField(blank=True, null=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.profileserenicia')),
            ],
        ),
        migrations.CreateModel(
            name='StoryLifeTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('example', models.TextField(blank=True, null=True, verbose_name='Example')),
            ],
            options={
                'verbose_name': 'Life story',
                'verbose_name_plural': 'Life stories',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
                ('date', models.DateField(default=app9_personnalized_project.models.get_localtime, verbose_name='Date')),
                ('intro', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Introduction')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_public', models.BooleanField(default=True, verbose_name='Visible to the family')),
                ('filling_date', models.DateField(blank=True, null=True, verbose_name='Completed on')),
                ('chapters', models.ManyToManyField(blank=True, to='app9_personnalized_project.Chapter', verbose_name='Chapters')),
                ('created_by', models.ForeignKey(limit_choices_to=models.Q(('user__groups__permissions__codename', 'view_supportproject'), ('user__is_active', True), ('user__is_staff', True)), on_delete=django.db.models.deletion.CASCADE, related_name='created_by_app8_sp', to='app4_ehpad_base.profileserenicia', verbose_name='Created by')),
                ('target', models.ForeignKey(limit_choices_to=models.Q(('user__groups__permissions__codename', 'view_residentehpad'), ('user__is_active', True)), on_delete=django.db.models.deletion.CASCADE, related_name='target_app8_sp', to='app4_ehpad_base.profileserenicia', verbose_name='Resident concerned')),
            ],
            options={
                'verbose_name': 'Survey',
            },
        ),
        migrations.CreateModel(
            name='Unavailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('support_project', 'Support project'), ('demo', 'Demonstration')], max_length=20)),
                ('start', models.DateField(verbose_name='Start day')),
                ('end', models.DateField(verbose_name='End day')),
            ],
            options={
                'verbose_name': 'Unavailability',
                'ordering': ('start', 'end'),
            },
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_update', models.DateTimeField(auto_now=True, null=True)),
                ('interviewee', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='interviewee_app8_sp', to='app4_ehpad_base.profileserenicia')),
                ('notation', models.ManyToManyField(blank=True, to='app9_personnalized_project.Notation')),
                ('survey', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.survey')),
            ],
        ),
        migrations.CreateModel(
            name='StoryLife',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('cannot_answer', models.BooleanField(default=False)),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.profileserenicia')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.storylifetitle')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Order')),
                ('text', models.CharField(max_length=200)),
                ('notation_choices', models.ManyToManyField(to='app9_personnalized_project.NotationChoices', verbose_name='Possible answers')),
            ],
            options={
                'verbose_name': 'Question',
                'ordering': ['number'],
            },
        ),
        migrations.AddField(
            model_name='notation',
            name='notation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.notationchoices'),
        ),
        migrations.AddField(
            model_name='notation',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.question'),
        ),
        migrations.CreateModel(
            name='ImportedProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Original creation date', verbose_name='Date')),
                ('file', models.FileField(help_text='PDF file only', upload_to='imported_SP/', validators=[app4_ehpad_base.validators.validate_file_extension], verbose_name='File')),
                ('target', models.OneToOneField(limit_choices_to=models.Q(('user__groups__permissions__codename', 'view_residentehpad'), ('user__is_active', True)), on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.profileserenicia', verbose_name='Resident concerned')),
            ],
            options={
                'verbose_name': 'Project importation',
            },
        ),
        migrations.AddField(
            model_name='chapter',
            name='questions',
            field=models.ManyToManyField(blank=True, to='app9_personnalized_project.Question', verbose_name='Questions'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='referees',
            field=models.ManyToManyField(blank=True, to='auth.Group', verbose_name='Concerned referees'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('by_video', models.BooleanField(default=False)),
                ('confirmed', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('owner', models.BooleanField(default=False)),
                ('planning_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app15_calendar.planningevent')),
                ('profileserenicia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.profileserenicia')),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('parent', 'Parent'), ('child', 'Child'), ('partner', 'Partner'), ('spouse', 'Spouse'), ('ex_partner', 'Ex partner'), ('ex_spouse', 'Ex spouse')], default='parent', max_length=20)),
                ('quality', models.CharField(choices=[('normal', 'Good'), ('good', 'Fusional'), ('bad', 'Conflicting')], default='normal', max_length=20)),
                ('other', models.BooleanField(default=False)),
                ('from_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_person', to='app9_personnalized_project.person')),
                ('to_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_person', to='app9_personnalized_project.person')),
            ],
            options={
                'unique_together': {('from_person', 'to_person', 'other')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=2500, null=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.chapter')),
                ('surveyresponse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app9_personnalized_project.surveyresponse')),
            ],
            options={
                'unique_together': {('chapter', 'surveyresponse')},
            },
        ),
    ]
