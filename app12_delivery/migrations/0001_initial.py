# Generated by Django 3.2.13 on 2023-04-02 16:01

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app1_base', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constraint_name', models.CharField(choices=[('hourly', 'Horaire'), ('allergen', 'Allergie')], default='allergen', max_length=100)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ContractDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start_contract', models.DateField(null=True)),
                ('date_end_contract', models.DateField(blank=True, null=True)),
                ('type_housing', models.CharField(choices=[('house', 'Maison individuelle'), ('apartment', 'Appartement')], default='house', max_length=100)),
                ('comment_access', models.CharField(blank=True, max_length=256)),
                ('payment_method', models.CharField(choices=[('check', 'Chèque'), ('sampling', 'Prélèvement SEPA')], default='check', max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.BooleanField(default=False, verbose_name='Monday')),
                ('tuesday', models.BooleanField(default=False, verbose_name='Tuesday')),
                ('wednesday', models.BooleanField(default=False, verbose_name='Wednesday')),
                ('thursday', models.BooleanField(default=False, verbose_name='Thursday')),
                ('friday', models.BooleanField(default=False, verbose_name='Friday')),
                ('saturday', models.BooleanField(default=False, verbose_name='Saturday')),
                ('sunday', models.BooleanField(default=False, verbose_name='Sunday')),
            ],
        ),
        migrations.CreateModel(
            name='DesignationInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=128)),
                ('percentage_vat', models.FloatField(choices=[(0.2, '20%'), (0.1, '10%'), (0.085, '8,5%'), (0.055, '5,5%'), (0.021, '2,1%')])),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='InfoCustomerInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_name', models.CharField(help_text='Nom de naissance du client', max_length=100)),
                ('martial_name', models.CharField(help_text="Nom d'usage du client", max_length=100)),
                ('birth_day', models.DateField(help_text='Date de naissance du client. Obligatoire')),
                ('code_country_born', models.CharField(help_text='Code INSEE du pays sur 5 caractères numériques (cf nomenclature INSEE). Obligatoire', max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9]{5}$')])),
                ('departement_born', models.CharField(help_text='Code INSEE du département à la date de naissance ou TOM (si pays = France) Format : 3 caractères alphanumériques : 001, 040, 976. 02B pour le département de Haute-Corse. Précision : cette donnée est obligatoire si et seulement si le code Pays de naissance correspond à celui de la France. Facultatif', max_length=3, validators=[django.core.validators.RegexValidator(message='Format : 3 caractères alphanumériques : 001, 040, 976. 02B pour le département de Haute-Corse. Précision : cette donnée est obligatoire si et seulement si le code Pays de naissance correspond à celui de la France.', regex='^[09][0-9][0-9abAB]$')])),
                ('commune_born', models.CharField(help_text='Commune de naissance. Précision : cette donnée est obligatoire si et seulement si le code Pays de naissance correspond à celui de la France. Facultatif', max_length=128)),
                ('number_lane', models.CharField(help_text='Numéro de la voie. Facultatif', max_length=20, validators=[django.core.validators.RegexValidator(regex='^(?!^0$)([0-9]){0,20}$')])),
                ('letter_lane', models.CharField(blank=True, help_text='Lettre associée au numéro de voie (B pour Bis, T pour Ter, Q pour Quater, C pour Quinquiès). Facultatif', max_length=1)),
                ('code_Type_lane', models.CharField(blank=True, help_text='Code type de voie. Facultatif.', max_length=4, validators=[django.core.validators.RegexValidator(message='4 caratères alphanumeriques maximum.', regex='^([0-9A-Za-z]){0,4}$')])),
                ('libelle_voie', models.CharField(help_text='Nom de la voie. Facultatif', max_length=28)),
                ('complement', models.CharField(blank=True, help_text="Complément d'adresse. Facultatif", max_length=38)),
                ('said_place', models.CharField(blank=True, help_text='Lieu-dit. Facultatif', max_length=38)),
                ('commune_wording', models.CharField(help_text="Libelle de la commune. Obligatoire. Précision : les libellés attendus sont ceux du code officiel géographique INSEE. Aucun contrôle n'est effectué sur le libellé. La validité de l'information est de la responsabilité du tiers de prestation", max_length=50)),
                ('code_commune', models.CharField(help_text="Code INSEE de la commune (cf nomenclature INSEE). Obligatoire. Aucun contrôle n'est effectué  sur l'existence du code. La validité de l'information est de la responsabilité du tiers de prestation", max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9][0-9a-bA-B][0-9]{3}$')])),
                ('postal_code', models.CharField(help_text='Code postal de la commune (exemple : 75001 pour Paris 1er arrondissement). Obligatoire', max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9]{5}$')])),
                ('code_country', models.CharField(help_text="Code INSEE du pays sur 5 caractères numériques (cf nomenclature INSEE). Obligatoire. Aucun contrôle n'est effectué  sur l'existence du code. La validité de l'information est de la responsabilité du partenaire.", max_length=5, validators=[django.core.validators.RegexValidator(regex='^[0-9]{5}$')])),
                ('bic', models.CharField(help_text='Identifiant BIC. Obligatoire. Le BIC est constitué : d’un code banque sur 4 caractères, d’un code pays (ISO 3166) sur 2 caractères, d’un code emplacement sur 2 caractères, d’un code branche, optionnel, sur 3 caractères. Celui-ci peut être facultativement complété avec trois X pour que le BIC soit sur 11 caractères', max_length=11, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z]{6}[0-9a-zA-Z]{2}([0-9a-zA-Z]{3})?$')])),
                ('iban', models.CharField(help_text='identifiant IBAN. Obligatoire. L’IBAN est constitué : d’un code pays (ISO 3166) sur 2 caractères,d’une clé de contrôle sur 2 caractères, permettant de s’assurer de l’intégrité du compte, d’un BBAN sur 14 à 34 caractères (23 caractères pour les comptes français (ancien format du RIB))', max_length=38, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}$')])),
                ('incumbent', models.CharField(help_text='titulaire du compte, civilité, nom et prénom. Obligatoire', max_length=100)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceHomePlus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=40, unique=True)),
                ('amount_without_vat', models.FloatField()),
                ('info_client_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.infocustomerinvoice')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessDeliveryProfile',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('app1_base.profile',),
        ),
        migrations.CreateModel(
            name='BusinessDeliveryUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessManProfile',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('app1_base.profile',),
        ),
        migrations.CreateModel(
            name='DeliveryManUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WeekOfContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.BooleanField(default=False, verbose_name='Monday')),
                ('tuesday', models.BooleanField(default=False, verbose_name='Tuesday')),
                ('wednesday', models.BooleanField(default=False, verbose_name='Wednesday')),
                ('thursday', models.BooleanField(default=False, verbose_name='Thursday')),
                ('friday', models.BooleanField(default=False, verbose_name='Friday')),
                ('saturday', models.BooleanField(default=False, verbose_name='Saturday')),
                ('sunday', models.BooleanField(default=False, verbose_name='Sunday')),
                ('contract_delivery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.contractdelivery')),
            ],
        ),
        migrations.CreateModel(
            name='TourDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_tour_delivery', models.DateField(null=True, unique=True)),
                ('tour_delivery_routing', models.JSONField()),
                ('time_estimate', models.TimeField(blank=True, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Referent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.CharField(choices=[('Children', 'Enfant'), ('Grandchild', 'Petit-enfant'), ('business', 'Entreprise'), ('other', 'Autre')], default='Children', max_length=100)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('phone_number', models.SmallIntegerField(null=True)),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.contractdelivery')),
            ],
        ),
        migrations.CreateModel(
            name='NumberDesignationPerInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_benefit', models.IntegerField()),
                ('designation_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.designationinvoice')),
                ('invoice_home_plus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.invoicehomeplus')),
            ],
        ),
        migrations.CreateModel(
            name='MealsNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_monday', models.IntegerField(default=0, verbose_name='Meal Monday')),
                ('meal_tuesday', models.IntegerField(default=0, verbose_name='Meal Tuesday')),
                ('meal_wednesday', models.IntegerField(default=0, verbose_name='Meal Wednesday')),
                ('meal_thursday', models.IntegerField(default=0, verbose_name='Meal Thursday')),
                ('meal_friday', models.IntegerField(default=0, verbose_name='Meal Friday')),
                ('meal_saturday', models.IntegerField(default=0, verbose_name='Meal Saturday')),
                ('meal_sunday', models.IntegerField(default=0, verbose_name='Meal Sunday')),
                ('week_of_contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.weekofcontract')),
            ],
        ),
        migrations.AddField(
            model_name='invoicehomeplus',
            name='invoice',
            field=models.ManyToManyField(blank=True, through='app12_delivery.NumberDesignationPerInvoice', to='app12_delivery.DesignationInvoice'),
        ),
        migrations.CreateModel(
            name='DeliveryWindow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_week_delivery', models.SmallIntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], unique=True, validators=[django.core.validators.MaxValueValidator(7), django.core.validators.MinValueValidator(1)])),
                ('time_start', models.TimeField(null=True)),
                ('time_end', models.TimeField(null=True)),
                ('constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.constraint')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(null=True)),
                ('finish', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
                ('tour_delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app12_delivery.tourdelivery')),
            ],
        ),
        migrations.CreateModel(
            name='CancelDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_cancel', models.DateField()),
                ('commentary_cancel', models.CharField(max_length=255, null=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='BillingPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.CharField(choices=[('Children', 'Enfant'), ('Grandchild', 'Petit-enfant'), ('business', 'Entreprise'), ('other', 'Autre')], default='Children', max_length=100)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('address', models.CharField(max_length=256, null=True)),
                ('postal_code', models.SmallIntegerField(null=True)),
                ('town_address', models.CharField(max_length=512, null=True)),
                ('phone_number', models.SmallIntegerField(null=True)),
                ('invoice', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='app12_delivery.invoicehomeplus')),
            ],
        ),
    ]
