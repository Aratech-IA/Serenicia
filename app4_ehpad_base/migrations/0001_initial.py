# Generated by Django 3.2.13 on 2023-04-02 16:00

import app4_ehpad_base.models
import app4_ehpad_base.validators
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import secrets


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app1_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accompaniment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.BooleanField(default=True)),
                ('price_cents', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BlogImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=250)),
                ('image_blog', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dessert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.BooleanField(default=True)),
                ('price_cents', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Entree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('price_cents', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='EvalMenuSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notation_switch', models.TimeField(default=datetime.datetime(1900, 1, 1, 16, 0))),
            ],
        ),
        migrations.CreateModel(
            name='IntonationToRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('points', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MainDish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.BooleanField(default=True)),
                ('price_cents', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime.today, null=True)),
                ('type', models.CharField(choices=[('noon', 'noon'), ('evening', 'evening')], default='noon', max_length=10)),
                ('dry_cheese', models.BooleanField(default=True)),
                ('cottage_cheese', models.BooleanField(default=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('price_cents_to_date', models.PositiveIntegerField(default=0)),
                ('substitution', models.BooleanField(default=False)),
                ('accompaniment', models.ForeignKey(blank=True, limit_choices_to=models.Q(('active', True)), null=True, on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.accompaniment')),
                ('dessert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.dessert')),
                ('entree', models.ForeignKey(blank=True, limit_choices_to=models.Q(('active', True)), null=True, on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.entree')),
                ('main_dish', models.ForeignKey(blank=True, limit_choices_to=models.Q(('active', True)), null=True, on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.maindish')),
                ('photo_service', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MotCVS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(default='vide', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MotDirection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(default='vide', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MotHotelResto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(default='vide', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MotPoleSoins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(default='vide', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MutualDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=app4_ehpad_base.models.MutualDocumentsFile(), validators=[app4_ehpad_base.validators.validate_file_extension], verbose_name='File')),
                ('document_type', models.CharField(choices=[('bond', 'Surety Bond'), ('stay-contract', 'Stay Contract'), ('general-condition', 'General Condition'), ('price-statement', 'Price Statement'), ('benefit', 'Benefit'), ('endorsement', 'Endorsement'), ('rules-operation', 'Rules Operation'), ('conduct-charter', 'Conduct Charter'), ('reading-certificate', 'Reading Certificate'), ('image-authorization', 'Image Authorization')], default=None, max_length=100, verbose_name='Type of document')),
                ('added_date', models.DateField(default=django.utils.timezone.localtime, verbose_name='Add date')),
            ],
        ),
        migrations.CreateModel(
            name='PresentationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True, verbose_name='Presentation')),
                ('default', models.BooleanField(blank=True, choices=[(None, 'No'), (True, 'Yes')], default=None, help_text='Presentation of the meal before processing', null=True, unique=True, verbose_name='Default')),
            ],
            options={
                'verbose_name': 'Presentation type',
            },
        ),
        migrations.CreateModel(
            name='ProfileSerenicia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_bond', models.CharField(blank=True, choices=[('', '-------------------'), ('Child', (('Son', 'Son'), ('Daughter', 'Daughter'))), ('Grandchildren', (('Grandson', 'Grandson'), ('Granddaughter', 'Granddaughter'))), ('Other', (('Brother', 'Brother'), ('Sister', 'Sister'), ('Cousin', 'Cousin'), ('Uncle', 'Uncle'), ('Aunt', 'Aunt'), ('Niece', 'Niece'), ('Nephew', 'Nephew')))], max_length=14, null=True, verbose_name='Family bond')),
                ('folder', models.CharField(blank=True, default=secrets.token_urlsafe, max_length=200)),
                ('homepage', models.CharField(choices=[('family', 'family'), ('cuisine', 'cuisine')], default='family', max_length=20)),
                ('status', models.CharField(choices=[('home', 'Present'), ('hospitalized', 'Hospitalized'), ('vacation', 'Vacation'), ('deceased', 'Deceased')], default='home', max_length=200, verbose_name='Status')),
                ('external_key', models.IntegerField(blank=True, default=False, null=True)),
                ('birth_city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Birth city')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('entry_date', models.DateField(blank=True, default=app4_ehpad_base.models.date_now, null=True, verbose_name='Entry date')),
                ('cal_id', models.EmailField(blank=True, default=False, max_length=254, null=True)),
                ('titan_key', models.CharField(blank=True, max_length=200, null=True)),
                ('pics_total', models.IntegerField(blank=True, default=False, null=True)),
                ('pics_last', models.IntegerField(blank=True, default=False, null=True)),
                ('token_video_call', models.IntegerField(blank=True, default=app4_ehpad_base.models.random_token2, null=True)),
                ('uri_netsoins', models.CharField(blank=True, max_length=200, null=True)),
                ('service_account_file', models.JSONField(default=dict)),
                ('gcp_project', models.CharField(blank=True, default='undefined', max_length=50, null=True)),
                ('has_active_service_account', models.BooleanField(default=False)),
                ('active_since', models.DateField(blank=True, null=True)),
                ('sa_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('has_active_subcalendar', models.BooleanField(default=False)),
                ('bacterium', models.BooleanField(default=False)),
                ('date_status_deceased', models.DateField(blank=True, default=None, null=True)),
                ('UP_volunteer', models.BooleanField(default=False)),
                ('passphrase', models.FileField(blank=True, null=True, upload_to=app4_ehpad_base.models.upload_passphrase)),
                ('word_played', models.PositiveIntegerField(default=0)),
                ('total_score', models.PositiveIntegerField(default=0)),
                ('meal_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app4_ehpad_base.presentationtype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TypeRoutine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='family', max_length=20)),
                ('start', models.IntegerField(choices=[(0, '07:00'), (1, '07:30'), (2, '08:00'), (3, '08:30'), (4, '09:00'), (5, '09:30'), (6, '10:00'), (7, '10:30'), (8, '11:00'), (9, '11:30'), (10, '12:00'), (11, '12:30'), (12, '13:00'), (13, '13:30'), (14, '14:00'), (15, '14:30'), (16, '15:00'), (17, '15:30'), (18, '16:00'), (19, '16:30'), (20, '17:00'), (21, '17:30'), (22, '18:00'), (23, '18:30'), (24, '19:00'), (25, '19:30'), (26, '20:00'), (27, '20:30'), (28, '21:00'), (29, '21:30')], default=0)),
                ('end', models.IntegerField(choices=[(0, '07:00'), (1, '07:30'), (2, '08:00'), (3, '08:30'), (4, '09:00'), (5, '09:30'), (6, '10:00'), (7, '10:30'), (8, '11:00'), (9, '11:30'), (10, '12:00'), (11, '12:30'), (12, '13:00'), (13, '13:30'), (14, '14:00'), (15, '14:30'), (16, '15:00'), (17, '15:30'), (18, '16:00'), (19, '16:30'), (20, '17:00'), (21, '17:30'), (22, '18:00'), (23, '18:30'), (24, '19:00'), (25, '19:30'), (26, '20:00'), (27, '20:30'), (28, '21:00'), (29, '21:30')], default=2)),
            ],
        ),
        migrations.CreateModel(
            name='WordToRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('points', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserListIntermediate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('was_manual', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1_base.profile')),
                ('profileserenicia', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app4_ehpad_base.profileserenicia')),
            ],
        ),
        migrations.AddField(
            model_name='profileserenicia',
            name='user_list',
            field=models.ManyToManyField(blank=True, through='app4_ehpad_base.UserListIntermediate', to='app1_base.Profile'),
        ),
        migrations.AddField(
            model_name='profileserenicia',
            name='user_waiting',
            field=models.ManyToManyField(blank=True, related_name='wait_for_help', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProfileEhpad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wanted_placement', models.CharField(choices=[('ehpad', 'EHPAD'), ('ehpadpu', 'EHPAD Protected Unit'), ('ehpadstudypu', 'EHPAD Study the protected unit'), ('senior_residence ', 'Senior residence')], default='EHPAD', max_length=20, verbose_name='Placement choice for resident')),
                ('wanted_entry_date', models.DateField(blank=True, null=True, verbose_name='Date for entry wanted')),
                ('marital_status', models.CharField(choices=[('Marital life', (('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widower', 'Widower')))], default='single', max_length=8, verbose_name='Marital status')),
                ('religion', models.CharField(choices=[('without', 'Without / Do not wish to communicate this information'), ('christians', 'Christians'), ('muslims', 'Muslims'), ('hindus', 'Hindus'), ('jews', 'Jews'), ('buddhists', 'Buddhists'), ('other', 'Other')], default='unaffiliated', max_length=20, verbose_name='Religion')),
                ('previous_profession', models.CharField(blank=True, max_length=200, null=True, verbose_name='Previous profession of resident')),
                ('resident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PreferencesSerenicia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notif_family_new_picture', models.BooleanField(default=True, verbose_name='Receive new photo notification')),
                ('notif_doctor_demand_date', models.BooleanField(default=True, verbose_name='Receive doctor visit request notification')),
                ('sensitive_photos', models.BooleanField(default=True, verbose_name='See sensitive photos in the gallery')),
                ('interventions', models.IntegerField(choices=[(0, 'No display'), (1, 'Photo of contributor and time only'), (2, 'Titled only'), (3, 'Full display')], default=3, verbose_name='Display of interventions')),
                ('profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Pic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='')),
                ('description', models.CharField(blank=True, default='No Description', max_length=250, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('profil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.profileserenicia')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photos',
            },
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('file', models.ImageField(upload_to='tmp_photos/', validators=[app4_ehpad_base.validators.validate_image])),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('identified', models.ManyToManyField(blank=True, to='app4_ehpad_base.ProfileSerenicia')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalizedDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=app4_ehpad_base.models.MutualDocumentsFile(), validators=[app4_ehpad_base.validators.validate_file_extension], verbose_name='File')),
                ('document_type', models.CharField(choices=[('bond', 'Surety Bond'), ('stay-contract', 'Stay Contract'), ('general-condition', 'General Condition'), ('price-statement', 'Price Statement'), ('benefit', 'Benefit'), ('endorsement', 'Endorsement'), ('rules-operation', 'Rules Operation'), ('conduct-charter', 'Conduct Charter'), ('reading-certificate', 'Reading Certificate'), ('image-authorization', 'Image Authorization')], default=None, max_length=100, verbose_name='Type of document')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='User', to=settings.AUTH_USER_MODEL)),
                ('user_resident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Resident')),
            ],
        ),
        migrations.CreateModel(
            name='PayRoll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_payslip', models.DateField(default=app4_ehpad_base.models.date_payroll, help_text='Chose a date with correct month of payslip, dont mind the day')),
                ('payslip', models.FileField(blank=True, null=True, upload_to='payroll/')),
                ('employees', models.ForeignKey(blank=True, limit_choices_to=models.Q(('groups__permissions__codename', 'view_internalemployees')), on_delete=django.db.models.deletion.CASCADE, related_name='user_list', to=settings.AUTH_USER_MODEL, verbose_name='Name of employee')),
            ],
        ),
        migrations.CreateModel(
            name='MenuEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('main_dish', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('dessert', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('service', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], null=True)),
                ('menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.meal')),
                ('voter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resident', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MealPresentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(null=True, upload_to='cuisine/')),
                ('item', models.CharField(choices=[('entree', 'Entree'), ('main_dish', 'Main dish'), ('dessert', 'Dessert')], max_length=10)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.meal')),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.presentationtype')),
            ],
        ),
        migrations.CreateModel(
            name='MealBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('lunch', models.BooleanField(default=False)),
                ('dinner', models.BooleanField(default=False)),
                ('is_lunch_served', models.BooleanField(default=False)),
                ('is_dinner_served', models.BooleanField(default=False)),
                ('is_lunch_ready', models.BooleanField(default=False)),
                ('is_dinner_ready', models.BooleanField(default=False)),
                ('other_guests', models.IntegerField(default=0, null=True)),
                ('private', models.BooleanField(default=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('surprise', models.BooleanField(default=False)),
                ('guests', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1_base.profile')),
            ],
        ),
        migrations.CreateModel(
            name='KitInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(default=django.utils.timezone.localtime, verbose_name='Add date')),
                ('laundry_labeled', models.CharField(choices=[('labeled by family', 'Laundry labeled by family'), ('labeled by residence', 'Laundry mark by residence')], default=None, max_length=50, verbose_name='Laundry mark')),
                ('laundry_washed', models.CharField(choices=[('washed by family', 'Laundry washed by family'), ('washed by residence', 'Laundry washed by residence')], default=None, max_length=50, verbose_name='Laundry washed')),
                ('dental_equipment', models.CharField(choices=[('top', 'Top'), ('bottom', 'Bottom'), ('top bottom', 'Top and Bottom'), ('does not have', 'Does not have one')], default=None, max_length=17, verbose_name='Dental equipment')),
                ('hearing_equipment', models.CharField(choices=[('left', 'Left'), ('right', 'Right'), ('right left', 'Right and Left'), ('does not have', 'Does not have one')], default=None, max_length=17, verbose_name='Hearing equipment')),
                ('cane', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=27, verbose_name='Cane')),
                ('walker', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=27, verbose_name='Walker')),
                ('glasses', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=27, verbose_name='Glasses')),
                ('wheelchair', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=27, verbose_name='Wheelchair')),
                ('pants', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Pants')),
                ('skirt_dress', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, null=True, verbose_name='Skirt and dress')),
                ('pull', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Pull')),
                ('jacket', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Jacket')),
                ('head_cover', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Head cover')),
                ('sweater_long', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Long sleeve sweater')),
                ('sweater_short', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Short sleeve sweater')),
                ('t_shirt_long', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Long sleeve t-shirt')),
                ('t_shirt_short', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Short sleeve t-shirt')),
                ('socks', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Socks')),
                ('slipper', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Slipper')),
                ('summer_shoe', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Summer shoe')),
                ('winter_shoe', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Winter  shoe')),
                ('bra', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, null=True, verbose_name='Bra')),
                ('underwear', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Underwear')),
                ('nightdress', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Nightdress')),
                ('dressing_gown', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15)], default=0, verbose_name='Dressing gown')),
                ('nurses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nurses')),
                ('user_resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Resident', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Invoice EHPAD', help_text='Define name for this invoice.', max_length=100, verbose_name='Name of invoice')),
                ('type', models.CharField(choices=[('invoice', 'Invoice'), ('invoice_hairdresser', 'Invoice Hairdresser'), ('invoice_pedicure', 'Invoice Pedicure'), ('invoice_pharmacy', 'Invoice Pharmacy'), ('other_invoice', 'Other Invoice')], default='invoice', max_length=50, verbose_name='Type of invoice')),
                ('upload', models.FileField(blank=True, null=True, upload_to=app4_ehpad_base.models.InvoiceFile(), verbose_name='File')),
                ('pub_date', models.DateField(default=django.utils.timezone.localtime, help_text='Define the day/month/year of the invoice.', verbose_name='Publication date')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL, verbose_name='Added by')),
                ('user_resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='app1_base.customuser', verbose_name='Resident')),
            ],
        ),
        migrations.CreateModel(
            name='EmptyRoomCleaned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory', models.BooleanField(default=False, help_text='State of fixtures')),
                ('disinfection', models.BooleanField(default=False, help_text='Smoke disinfection')),
                ('painting', models.BooleanField(default=False, help_text='Painting done')),
                ('menage', models.BooleanField(default=False, help_text='Menage done')),
                ('bed', models.BooleanField(default=False, help_text='Bed done')),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app1_base.client')),
            ],
            options={
                'verbose_name': 'Empty Room Cleaned',
            },
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_diet', models.CharField(blank=True, choices=[('normal', 'Normal'), ('diabetic', 'Diabetic'), ('without salt', 'Without salt'), ('without residue', 'Without residue'), ('high protein', 'High protein')], default=None, max_length=30, null=True, verbose_name='Type of diet')),
                ('food_option', models.CharField(blank=True, choices=[('normal', 'Normal'), ('minced', 'Minced'), ('mixed', 'Mixed'), ('liquid', 'Liquid'), ('gelled waters', 'Gelled waters')], default=None, max_length=30, null=True, verbose_name='Food option')),
                ('allergies', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('gluten', 'Gluten'), ('peanut', 'Peanut'), ('milk', 'Milk'), ('eggs', 'Eggs'), ('nut', 'Nut'), ('molluscs', 'Molluscs'), ('seafood', 'Seafood'), ('mustard', 'Mustard'), ('fish', 'Fish'), ('celery', 'Celery'), ('soy', 'Soy'), ('sulphites', 'Sulphites'), ('sesame', 'Sesame'), ('lupine', 'Lupine')], max_length=92, null=True, verbose_name='Allergies')),
                ('user_resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Resident')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_card', models.CharField(choices=[('national_card', 'National Card'), ('vital_card', 'Vital Card'), ('mutual_card', 'Mutual Card'), ('blood_card', 'Blood Card')], default=None, max_length=30, verbose_name='Type of card')),
                ('upload_card', models.FileField(upload_to=app4_ehpad_base.models.CardFile(), verbose_name='File')),
                ('active', models.BooleanField(default=False, verbose_name='Is active')),
                ('user_resident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Resident')),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Titre')),
                ('content', models.TextField(blank=True, verbose_name='Contenu')),
                ('created_on', models.DateField(blank=True, null=True, verbose_name='Created the')),
                ('files', models.FileField(blank=True, null=True, upload_to='blog_doc/')),
                ('category', models.CharField(blank=True, choices=[('direction', 'Post from the Direction'), ('social_life', 'Post from Communication and Social Life section'), ('care', 'Post from Care section'), ('hospitality', 'Post from Hospitality section'), ('activities', 'Activities Post')], default='activities', max_length=150, null=True, verbose_name='Category')),
                ('is_public', models.BooleanField(default=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('cover', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cover_image', to='app4_ehpad_base.blogimage')),
                ('images', models.ManyToManyField(blank=True, to='app4_ehpad_base.BlogImage')),
            ],
        ),
        migrations.CreateModel(
            name='AlexaOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alexa_device_id', models.CharField(blank=True, max_length=250, null=True)),
                ('order_type', models.CharField(choices=[('visio_call', 'Visio Call'), ('back_to_index', 'Back to Index')], default='', max_length=50)),
                ('score', models.CharField(blank=True, max_length=50, null=True)),
                ('video_call_contact_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdministrativeDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('bond', 'Surety Bond'), ('stay-contract', 'Stay Contract'), ('general-condition', 'General Condition'), ('price-statement', 'Price Statement'), ('benefit', 'Benefit'), ('endorsement', 'Endorsement'), ('rules-operation', 'Rules Operation'), ('conduct-charter', 'Conduct Charter'), ('reading-certificate', 'Reading Certificate'), ('image-authorization', 'Image Authorization')], default=None, max_length=100, verbose_name='Type of document')),
                ('file', models.FileField(upload_to=app4_ehpad_base.models.AdministrativeDocumentsFile(), validators=[app4_ehpad_base.validators.validate_file_extension], verbose_name='File')),
                ('envelope_id', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Envelope id')),
                ('doc_id', models.IntegerField(blank=True, null=True, verbose_name='Document id')),
                ('signature_date', models.DateTimeField(blank=True, null=True, verbose_name='Signature date')),
                ('signer_user_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Signer user id')),
                ('user_family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Family', to=settings.AUTH_USER_MODEL)),
                ('user_resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Resident')),
            ],
        ),
        migrations.CreateModel(
            name='WeekRoutine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(10, 'Every days'), (0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('service_type', models.CharField(default='service standard', max_length=50)),
                ('routine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app4_ehpad_base.typeroutine')),
            ],
            options={
                'unique_together': {('routine', 'day', 'service_type')},
            },
        ),
        migrations.AddConstraint(
            model_name='payroll',
            constraint=models.UniqueConstraint(fields=('employees', 'date_of_payslip'), name='Can have one payslip per month per employee in a year'),
        ),
        migrations.AlterUniqueTogether(
            name='menuevaluation',
            unique_together={('menu', 'voter')},
        ),
        migrations.AlterUniqueTogether(
            name='mealpresentation',
            unique_together={('item', 'meal', 'presentation')},
        ),
        migrations.AlterUniqueTogether(
            name='meal',
            unique_together={('date', 'type', 'substitution')},
        ),
    ]
